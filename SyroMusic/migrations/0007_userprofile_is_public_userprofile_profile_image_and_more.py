# Generated by Django 5.0.2 on 2025-10-30 05:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('SyroMusic', '0006_add_performance_indexes'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='userprofile',
            name='is_public',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='profile_image',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='bio',
            field=models.TextField(blank=True, max_length=500, null=True),
        ),
        migrations.CreateModel(
            name='PlaybackHistoryAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listening_streak', models.IntegerField(default=0)),
                ('last_listened_date', models.DateField(auto_now=True)),
                ('most_active_hour', models.IntegerField(default=0)),
                ('most_active_day_of_week', models.IntegerField(default=0)),
                ('total_listening_minutes', models.IntegerField(default=0)),
                ('unique_artists_heard', models.IntegerField(default=0)),
                ('unique_tracks_heard', models.IntegerField(default=0)),
                ('monthly_summary', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='playback_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='TrackLyrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spotify_track_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('track_name', models.CharField(max_length=255)),
                ('artist_name', models.CharField(max_length=255)),
                ('lyrics', models.TextField()),
                ('lyrics_source', models.CharField(default='genius', max_length=100)),
                ('is_explicit', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['spotify_track_id'], name='SyroMusic_t_spotify_792222_idx')],
            },
        ),
        migrations.CreateModel(
            name='PlaylistCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_level', models.CharField(choices=[('view', 'View Only'), ('edit', 'Can Edit'), ('admin', 'Admin')], default='view', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborators', to='SyroMusic.playlist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborated_playlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('playlist', 'user')},
            },
        ),
        migrations.CreateModel(
            name='PlaylistShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='SyroMusic.playlist')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist_shares', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_playlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('playlist', 'shared_by', 'shared_with')},
            },
        ),
        migrations.CreateModel(
            name='QueueItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_data', models.JSONField()),
                ('position', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('queue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='SyroMusic.playbackqueue')),
            ],
            options={
                'ordering': ['position'],
                'indexes': [models.Index(fields=['queue', 'position'], name='SyroMusic_q_queue_i_a5ce6e_idx')],
                'unique_together': {('queue', 'track_data')},
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(db_index=True, max_length=255)),
                ('search_type', models.CharField(choices=[('all', 'All'), ('artist', 'Artist'), ('album', 'Album'), ('track', 'Track'), ('playlist', 'Playlist')], default='all', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='SyroMusic_s_user_id_4abbd4_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserFollowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['follower', '-created_at'], name='SyroMusic_u_followe_b9958c_idx'), models.Index(fields=['following', '-created_at'], name='SyroMusic_u_followi_9a0ded_idx')],
                'unique_together': {('follower', 'following')},
            },
        ),
    ]
